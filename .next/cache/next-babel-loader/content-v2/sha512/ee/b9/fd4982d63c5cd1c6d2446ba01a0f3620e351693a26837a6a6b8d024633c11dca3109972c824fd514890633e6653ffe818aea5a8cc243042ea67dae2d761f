{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        updateShop(\\n          data:{\\n            shop_addr: \\\"\", \"\\\",\\n            shop_phone: \\\"\", \"\\\",\\n            shop_order: \", \"\\n          },\\n          where:{\\n            idshop: \", \"\\n          }\\n        ){\\n            idshop\\n            shop_name\\n            shop_addr\\n            shop_phone\\n            shop_order\\n        }\\n    }\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n        shop(\\n            idshop: \", \"\\n        ),\\n        {\\n            shop_addr\\n            shop_name\\n            shop_order\\n            shop_phone\\n            idshop\\n        }\\n    }\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        createShop(\\n          data :{\\n            shop_addr: \\\"\", \"\\\",\\n            shop_name: \\\"\", \"\\\",\\n            shop_order: 5,\\n            shop_phone: \\\"\", \"\\\"\\n          }\\n        ){\\n            idshop\\n            shop_addr\\n            shop_name\\n            shop_order\\n            shop_phone\\n        }\\n    }\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        addMenu(\\n        data:{\\n          menu_name: \\\"\", \"\\\",\\n          idshop: \", \"\\n        }\\n      ){\\n          menu{\\n            idmenu\\n            menu_name\\n          }\\n      }\\n    }\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        deleteShop(\\n          where: {\\n            idshop: \", \"\\n          }\\n        ){\\n          idshop\\n        }\\n    }\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        deleteMenu(\\n          where:{\\n            menu_id: \", \",\\n            shop_id: \", \"\\n          }\\n        ){\\n            menu_id\\n        }\\n    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation{\\n        getMenu(\\n            where:{\\n                shop_id: \", \"\\n            }\\n        ){\\n            idmenu\\n            menu_name\\n        }\\n    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n        shop{\\n            idshop\\n            shop_addr\\n            shop_name\\n            shop_order\\n            shop_phone\\n        }\\n    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation {\\n        login(\\n            where: {\\n                username: \\\"\", \"\\\",\\n                password: \\\"\", \"\\\"\\n            }\\n        ){\\n            token\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as types from '../constants/ActionTypes';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport Cookies from 'universal-cookie';\nvar cookies = new Cookies();\nvar uri = 'https://ejll3yirxk.execute-api.ap-southeast-2.amazonaws.com/dev/graphql';\nvar client = new ApolloClient({\n  uri: uri,\n  request: function request(operation) {\n    var token = cookies.get('token');\n\n    if (token) {\n      operation.setContext({\n        headers: {\n          authorization: token ? \"Bearer \".concat(token) : ''\n        }\n      });\n    }\n  }\n});\nvar token = null;\nexport default (function () {\n  return \"Show page working ! \";\n});\nexport var userLogin = function userLogin(username, password) {\n  return function (dispatch) {\n    var LOGIN_GQL = gql(_templateObject(), username, password);\n    client.mutate({\n      mutation: LOGIN_GQL\n    }).then(function (_ref) {\n      var data = _ref.data;\n\n      if (data.login) {\n        cookies.set('token', data.login.token, {\n          path: '/'\n        });\n        dispatch({\n          type: types.LOGIN,\n          payload: data.login.token\n        });\n      } else {\n        dispatch({\n          type: types.LOGIN_FAIL,\n          payload: 1\n        });\n      }\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: types.LOGIN_FAIL,\n        payload: 1\n      });\n    });\n  };\n};\nexport var fetchShops = function fetchShops() {\n  return function (dispatch) {\n    var FETCH_SHOP_GQL = gql(_templateObject2());\n    client.query({\n      query: FETCH_SHOP_GQL\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n      dispatch({\n        type: types.FETCH_SHOP,\n        payload: data.shop\n      });\n    });\n  };\n};\nexport var fetchMenus = function fetchMenus(id) {\n  return function (dispatch) {\n    var FETCH_MENU_GQL = gql(_templateObject3(), id);\n    client.mutate({\n      mutation: FETCH_MENU_GQL\n    }).then(function (_ref3) {\n      var data = _ref3.data;\n      dispatch({\n        type: types.FETCH_MENU,\n        payload: data.getMenu\n      });\n    });\n  };\n};\nexport var deleteMenu = function deleteMenu(menuid, shopid) {\n  return function (dispatch) {\n    var DELETE_MENU_GQL = gql(_templateObject4(), menuid, shopid);\n    client.mutate({\n      mutation: DELETE_MENU_GQL\n    }).then(function (_ref4) {\n      var data = _ref4.data;\n      dispatch({\n        type: types.DELETE_MENU,\n        payload: data.deleteMenu\n      });\n    });\n  };\n};\nexport var deleteShop = function deleteShop(shopid) {\n  return function (dispatch) {\n    var DELETE_SHOP_GQL = gql(_templateObject5(), shopid);\n    client.mutate({\n      mutation: DELETE_SHOP_GQL\n    }).then(function (_ref5) {\n      var data = _ref5.data;\n      dispatch({\n        type: types.DELETE_SHOP,\n        payload: data.deleteShop.idshop\n      });\n    });\n  };\n};\nexport var addNewMenu = function addNewMenu(shopid, menu_name) {\n  return function (dispatch) {\n    var ADD_MENU_GQL = gql(_templateObject6(), menu_name, shopid);\n    client.mutate({\n      mutation: ADD_MENU_GQL\n    }).then(function (_ref6) {\n      var data = _ref6.data;\n      dispatch({\n        type: types.ADD_MENU,\n        payload: data.addMenu.menu\n      });\n    });\n  };\n};\nexport var confirm = function confirm(open) {\n  return function (dispatch) {\n    dispatch({\n      type: types.CONFIRM,\n      payload: open\n    });\n  };\n};\nexport var snack = function snack(open, message) {\n  return function (dispatch) {\n    dispatch({\n      type: types.SNACK,\n      payload: {\n        open: open,\n        message: message\n      }\n    });\n    setTimeout(function () {\n      dispatch({\n        type: types.SNACK,\n        payload: {\n          open: false,\n          message: ''\n        }\n      });\n    }, 3000);\n  };\n};\nexport var addShop = function addShop(shopname, shopaddr, shopphone) {\n  return function (dispatch) {\n    var CREATE_SHOP_GQL = gql(_templateObject7(), shopaddr, shopname, shopphone);\n    client.mutate({\n      mutation: CREATE_SHOP_GQL\n    }).then(function (_ref7) {\n      var data = _ref7.data;\n      dispatch({\n        type: types.ADD_SHOP,\n        payload: data.createShop\n      });\n    });\n  };\n};\nexport var fetchShopDetail = function fetchShopDetail(shopid) {\n  return function (dispatch) {\n    var FETCH_SHOP_DETAIL_GQL = gql(_templateObject8(), shopid);\n    client.query({\n      query: FETCH_SHOP_DETAIL_GQL\n    }).then(function (_ref8) {\n      var data = _ref8.data;\n      dispatch({\n        type: types.FETCH_SHOP_DETAIL,\n        payload: data.shop[0]\n      });\n    });\n  };\n};\nexport var updateShopDetail = function updateShopDetail(shopid, shop_addr, shop_phone, shop_order) {\n  return function (dispatch) {\n    var UPDATE_SHOP_GQL = gql(_templateObject9(), shop_addr, shop_phone, shop_order, shopid);\n    client.mutate({\n      mutation: UPDATE_SHOP_GQL\n    }).then(function (_ref9) {\n      var data = _ref9.data;\n      dispatch({\n        type: types.UPDATE_SHOP_DETAIL,\n        payload: data.updateShop\n      });\n      dispatch({\n        type: types.RESET_SHOP_DETAIL\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/actions/index.tsx"],"names":["types","ApolloClient","gql","Cookies","cookies","uri","client","request","operation","token","get","setContext","headers","authorization","userLogin","username","password","dispatch","LOGIN_GQL","mutate","mutation","then","data","login","set","path","type","LOGIN","payload","LOGIN_FAIL","error","fetchShops","FETCH_SHOP_GQL","query","FETCH_SHOP","shop","fetchMenus","id","FETCH_MENU_GQL","FETCH_MENU","getMenu","deleteMenu","menuid","shopid","DELETE_MENU_GQL","DELETE_MENU","deleteShop","DELETE_SHOP_GQL","DELETE_SHOP","idshop","addNewMenu","menu_name","ADD_MENU_GQL","ADD_MENU","addMenu","menu","confirm","open","CONFIRM","snack","message","SNACK","setTimeout","addShop","shopname","shopaddr","shopphone","CREATE_SHOP_GQL","ADD_SHOP","createShop","fetchShopDetail","FETCH_SHOP_DETAIL_GQL","FETCH_SHOP_DETAIL","updateShopDetail","shop_addr","shop_phone","shop_order","UPDATE_SHOP_GQL","UPDATE_SHOP_DETAIL","updateShop","RESET_SHOP_DETAIL"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport * as types from '../constants/ActionTypes';\r\nimport { ApplicationState } from '../constants/ActionTypes';\r\nimport ApolloClient, { gql } from 'apollo-boost';\r\nimport Cookies from 'universal-cookie';\r\nimport { ActionCreator, Action, Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nexport type AppThunk = ActionCreator<\r\n  ThunkAction<void, ApplicationState, null, Action<string>>\r\n>;\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst uri = 'https://ejll3yirxk.execute-api.ap-southeast-2.amazonaws.com/dev/graphql';\r\n\r\nlet client = new ApolloClient({\r\n    uri,\r\n    request: (operation) => {\r\n      const token = cookies.get('token');\r\n      if(token){\r\n        operation.setContext({\r\n            headers: {\r\n                authorization: token ? `Bearer ${token}` : ''\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\nlet token = null;\r\n\r\nexport default () => {\r\n    return \"Show page working ! \";\r\n}\r\n\r\nexport const userLogin: AppThunk = (username, password) => (dispatch: Dispatch) => {\r\n\r\n    const LOGIN_GQL = gql`\r\n    mutation {\r\n        login(\r\n            where: {\r\n                username: \"${username}\",\r\n                password: \"${password}\"\r\n            }\r\n        ){\r\n            token\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: LOGIN_GQL\r\n    }).then(({data}) => {\r\n        if(data.login){\r\n            cookies.set('token', data.login.token, { path: '/' });\r\n\r\n            dispatch({\r\n                type: types.LOGIN,\r\n                payload: data.login.token\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: types.LOGIN_FAIL,\r\n                payload: 1\r\n            });\r\n        }     \r\n    }).catch(error => {\r\n        dispatch({\r\n            type: types.LOGIN_FAIL,\r\n            payload: 1\r\n        });\r\n    });\r\n}\r\n\r\nexport const fetchShops: AppThunk = () => (dispatch: Dispatch) => {\r\n    const FETCH_SHOP_GQL = gql`\r\n    {\r\n        shop{\r\n            idshop\r\n            shop_addr\r\n            shop_name\r\n            shop_order\r\n            shop_phone\r\n        }\r\n    }`;\r\n    \r\n    client.query({\r\n        query: FETCH_SHOP_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.FETCH_SHOP,\r\n            payload: data.shop\r\n        });   \r\n    })\r\n}\r\n\r\nexport const fetchMenus: AppThunk = (id) => (dispatch: Dispatch) => {\r\n\r\n    const FETCH_MENU_GQL = gql`\r\n    mutation{\r\n        getMenu(\r\n            where:{\r\n                shop_id: ${id}\r\n            }\r\n        ){\r\n            idmenu\r\n            menu_name\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: FETCH_MENU_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.FETCH_MENU,\r\n            payload: data.getMenu\r\n        });   \r\n    })\r\n}\r\n\r\nexport const deleteMenu: AppThunk = (menuid, shopid) => (dispatch: Dispatch) => {\r\n    const DELETE_MENU_GQL = gql`\r\n    mutation{\r\n        deleteMenu(\r\n          where:{\r\n            menu_id: ${menuid},\r\n            shop_id: ${shopid}\r\n          }\r\n        ){\r\n            menu_id\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: DELETE_MENU_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.DELETE_MENU,\r\n            payload: data.deleteMenu\r\n        });   \r\n    })\r\n}\r\n\r\nexport const deleteShop: AppThunk = (shopid) => (dispatch: Dispatch) => {\r\n    const DELETE_SHOP_GQL = gql`\r\n    mutation{\r\n        deleteShop(\r\n          where: {\r\n            idshop: ${shopid}\r\n          }\r\n        ){\r\n          idshop\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: DELETE_SHOP_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.DELETE_SHOP,\r\n            payload: data.deleteShop.idshop\r\n        });   \r\n    })\r\n}\r\n\r\nexport const addNewMenu: AppThunk = (shopid, menu_name) => (dispatch: Dispatch) => {\r\n\r\n    const ADD_MENU_GQL = gql`\r\n    mutation{\r\n        addMenu(\r\n        data:{\r\n          menu_name: \"${menu_name}\",\r\n          idshop: ${shopid}\r\n        }\r\n      ){\r\n          menu{\r\n            idmenu\r\n            menu_name\r\n          }\r\n      }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: ADD_MENU_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.ADD_MENU,\r\n            payload: data.addMenu.menu\r\n        });   \r\n    });\r\n}\r\n\r\nexport const confirm: AppThunk = (open) => (dispatch: Dispatch) => {\r\n    dispatch({\r\n        type: types.CONFIRM,\r\n        payload: open\r\n    });\r\n}\r\n\r\nexport const snack: AppThunk = (open, message) => (dispatch: Dispatch) => {\r\n    dispatch({\r\n        type: types.SNACK,\r\n        payload: {\r\n            open,\r\n            message\r\n        }\r\n    });\r\n\r\n    setTimeout(\r\n        function () {\r\n            dispatch({\r\n                type: types.SNACK,\r\n                payload: {\r\n                    open: false,\r\n                    message: ''\r\n                }\r\n            });\r\n        },\r\n        3000\r\n    );\r\n}\r\n\r\nexport const addShop: AppThunk = (shopname, shopaddr, shopphone) => (dispatch: Dispatch) => {\r\n    const CREATE_SHOP_GQL = gql`\r\n    mutation{\r\n        createShop(\r\n          data :{\r\n            shop_addr: \"${shopaddr}\",\r\n            shop_name: \"${shopname}\",\r\n            shop_order: 5,\r\n            shop_phone: \"${shopphone}\"\r\n          }\r\n        ){\r\n            idshop\r\n            shop_addr\r\n            shop_name\r\n            shop_order\r\n            shop_phone\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: CREATE_SHOP_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.ADD_SHOP,\r\n            payload: data.createShop\r\n        });   \r\n    })\r\n}\r\n\r\nexport const fetchShopDetail: AppThunk = (shopid) => (dispatch: Dispatch) => {\r\n    const FETCH_SHOP_DETAIL_GQL = gql`\r\n    {\r\n        shop(\r\n            idshop: ${shopid}\r\n        ),\r\n        {\r\n            shop_addr\r\n            shop_name\r\n            shop_order\r\n            shop_phone\r\n            idshop\r\n        }\r\n    }`;\r\n    \r\n    client.query({\r\n        query: FETCH_SHOP_DETAIL_GQL\r\n    }).then(({data}) => {\r\n        dispatch({\r\n            type: types.FETCH_SHOP_DETAIL,\r\n            payload: data.shop[0]\r\n        });   \r\n    })\r\n}\r\n\r\nexport const updateShopDetail: AppThunk = (shopid, shop_addr, shop_phone, shop_order) => (dispatch: Dispatch) => {\r\n    const UPDATE_SHOP_GQL = gql`\r\n    mutation{\r\n        updateShop(\r\n          data:{\r\n            shop_addr: \"${shop_addr}\",\r\n            shop_phone: \"${shop_phone}\",\r\n            shop_order: ${shop_order}\r\n          },\r\n          where:{\r\n            idshop: ${shopid}\r\n          }\r\n        ){\r\n            idshop\r\n            shop_name\r\n            shop_addr\r\n            shop_phone\r\n            shop_order\r\n        }\r\n    }`;\r\n    \r\n    client.mutate({\r\n        mutation: UPDATE_SHOP_GQL\r\n    }).then(({data}) => {\r\n        dispatch({ type: types.UPDATE_SHOP_DETAIL, payload: data.updateShop })\r\n        dispatch({ type: types.RESET_SHOP_DETAIL })\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}