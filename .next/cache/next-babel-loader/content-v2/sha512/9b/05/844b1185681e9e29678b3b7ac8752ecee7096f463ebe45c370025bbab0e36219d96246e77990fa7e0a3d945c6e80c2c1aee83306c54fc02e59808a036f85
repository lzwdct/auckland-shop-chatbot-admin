{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files (x86)\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\container\\\\shop\\\\ShopList.tsx\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchShops, deleteShop, confirm } from '../../actions';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport AddShop from './addShop';\nimport Confirm from '../../constants/Confirm';\nimport { useHistory } from 'react-router-dom';\n\nconst ShopList = ({\n  shopList,\n  getShopList,\n  open,\n  deleteShop\n}) => {\n  const {\n    0: id,\n    1: setID\n  } = useState(0); //const shopList = useSelector(state => state.shopList);\n  //const dispatch = useDispatch();\n\n  const history = useHistory();\n  useEffect(() => {\n    if (shopList.length === 0) getShopList();\n  }, []);\n\n  const delete_shop = id => {\n    open();\n    setID(id);\n  };\n\n  const renderShop = shopList => {\n    if (!shopList.length) return null;\n    return _.map(shopList, shop => {\n      return __jsx(ListItem, {\n        button: true,\n        key: shop.idshop,\n        component: \"a\",\n        onClick: () => history.push('/menu/' + shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, __jsx(ListItemText, {\n        primary: shop.shop_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), __jsx(ListItemSecondaryAction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => history.push('/edit/' + shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"Edit\"), __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => delete_shop(shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"Delete\")));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, shopList.length === 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 42\n    }\n  }, \"Loading...\"), shopList.length > 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, renderShop(shopList)), __jsx(AddShop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), __jsx(Confirm, {\n    submit: () => deleteShop(id),\n    title: \"Are you sure to delete?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  shopList: state.shopList\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getShopList: () => {\n      dispatch(fetchShops());\n    },\n    deleteShop: id => {\n      dispatch(deleteShop(id));\n    },\n    open: () => {\n      dispatch(confirm(true));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopList);","map":{"version":3,"sources":["C:/Program Files (x86)/Ampps/www/auckland-shop-chatbot-admin/src/container/shop/ShopList.tsx"],"names":["_","React","useState","useEffect","connect","fetchShops","deleteShop","confirm","List","ListItem","ListItemText","ListItemSecondaryAction","AddShop","Confirm","useHistory","ShopList","shopList","getShopList","open","id","setID","history","length","delete_shop","renderShop","map","shop","idshop","push","shop_name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport { fetchShops, deleteShop, confirm } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\r\nimport AddShop from './addShop';\r\nimport Confirm from '../../constants/Confirm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\ninterface PropsFromState {\r\n    shopList : []\r\n}\r\n  \r\ninterface propsFromDispatch {\r\n    getShopList:() => void,\r\n    open:() => void,\r\n    deleteShop:(id:number) => void\r\n}\r\n\r\ntype AllProps = PropsFromState & propsFromDispatch;\r\n\r\nconst ShopList : React.FunctionComponent<AllProps> = ({ shopList, getShopList, open, deleteShop }) => {\r\n    const [id, setID] = useState(0);\r\n\t//const shopList = useSelector(state => state.shopList);\r\n\t//const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif(shopList.length === 0)\r\n        getShopList();\r\n    },[])\r\n    \r\n    const delete_shop = (id: number) => {\r\n\t\topen();\r\n\t\tsetID(id)\r\n\t}\r\n    const renderShop = (shopList: []) => {\r\n        if(!shopList.length) return null;\r\n\t\treturn _.map(shopList, shop => {\r\n\t\t\treturn (\r\n                <ListItem button key={shop.idshop} component=\"a\" onClick={() => history.push('/menu/' + shop.idshop) } >\r\n                    <ListItemText primary={shop.shop_name} />\r\n                    <ListItemSecondaryAction>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => history.push('/edit/'+shop.idshop) }\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button \r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => delete_shop(shop.idshop)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n\t\t\t);\r\n\t\t});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                shopList.length === 0 && <div>Loading...</div>\r\n            }\r\n            {\r\n                shopList.length > 0 &&\r\n                <div>\r\n                    <List>\r\n                        {renderShop(shopList)}\r\n                    </List>\r\n                    <AddShop/>\r\n                    <Confirm\r\n                        submit={() => deleteShop(id)}\r\n                        title=\"Are you sure to delete?\"\r\n                    />\r\n                </div>\r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    shopList: state.shopList\r\n});\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\r\n    return {\r\n        getShopList: () => {\r\n            dispatch(fetchShops());\r\n        },\r\n        deleteShop: (id:number) => {\r\n            dispatch(deleteShop(id))\r\n        },\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopList)\r\n"]},"metadata":{},"sourceType":"module"}