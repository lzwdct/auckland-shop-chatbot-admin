{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Program Files\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\constants\\\\Confirm.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { confirm } from '../actions';\nimport { Dialog, DialogActions, DialogTitle, DialogContent } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nvar Confirm = /*#__PURE__*/function (_Component) {\n  _inherits(Confirm, _Component);\n\n  var _super = _createSuper(Confirm);\n\n  function Confirm() {\n    _classCallCheck(this, Confirm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Confirm, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.props.close();\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.props.submit();\n      this.handleClose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(Dialog, {\n        onClose: function onClose() {\n          return _this.handleClose();\n        },\n        open: this.props.confirm,\n        \"aria-labelledby\": \"confirm-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, __jsx(DialogTitle, {\n        id: \"confirm-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, this.props.title), __jsx(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, this.props.children), __jsx(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this.handleSubmit();\n        },\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"Yes\"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this.handleClose();\n        },\n        className: \"btn btn-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"No\")));\n    }\n  }]);\n\n  return Confirm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    confirm: state.confirm\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    close: function close() {\n      dispatch(confirm(false));\n    }\n  };\n};\n\nConfirm = connect(mapStateToProps, mapDispatchToProps)(Confirm);\nexport default Confirm;","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/constants/Confirm.tsx"],"names":["React","Component","confirm","Dialog","DialogActions","DialogTitle","DialogContent","connect","Confirm","props","close","submit","handleClose","title","children","handleSubmit","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,WAAhC,EAA6CC,aAA7C,QAAkE,mBAAlE;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,O;;;;;;;;;;;;;kCACW;AACT,WAAKC,KAAL,CAAWC,KAAX;AACH;;;mCACa;AACV,WAAKD,KAAL,CAAWE,MAAX;AACA,WAAKC,WAAL;AACH;;;6BACO;AAAA;;AACJ,aACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACA,WAAL,EAAN;AAAA,SADb;AAEI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWP,OAFrB;AAGI,2BAAgB,sBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,MAAC,WAAD;AACI,QAAA,EAAE,EAAC,sBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,KAAKO,KAAL,CAAWI,KAHhB,CALJ,EAUI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,KAAL,CAAWK,QADhB,CAVJ,EAaI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,YAAL,EAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAOI;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACH,WAAL,EAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CAbJ,CADJ;AA8BH;;;;EAvCiBX,S;;AA0CtB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bf,IAAAA,OAAO,EAAEe,KAAK,CAACf;AADe,GAAL;AAAA,CAA7B;;AAIA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHT,IAAAA,KAAK,EAAE,iBAAM;AACTS,MAAAA,QAAQ,CAACjB,OAAO,CAAC,KAAD,CAAR,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQAM,OAAO,GAAGD,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,OAA7C,CAAV;AAEA,eAAeA,OAAf","sourcesContent":["import React, { Component, Children } from 'react';\r\nimport { confirm } from '../actions';\r\nimport { Dialog, DialogActions, DialogTitle, DialogContent } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Confirm extends Component{\r\n    handleClose(){\r\n        this.props.close();\r\n    }\r\n    handleSubmit(){\r\n        this.props.submit();\r\n        this.handleClose();\r\n    }\r\n    render(){\r\n        return(\r\n            <Dialog\r\n                onClose={() => this.handleClose()} \r\n                open={this.props.confirm}\r\n                aria-labelledby=\"confirm-dialog-title\"\r\n            >\r\n                <DialogTitle\r\n                    id=\"confirm-dialog-title\"\r\n                >\r\n                    {this.props.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {this.props.children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button \r\n                        onClick={() => this.handleSubmit()} \r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Yes\r\n                    </button>\r\n                    <button \r\n                        onClick={() => this.handleClose()} \r\n                        className=\"btn btn-secondary\"\r\n                    >\r\n                        No\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    confirm: state.confirm\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        close: () => {\r\n            dispatch(confirm(false));\r\n        }\r\n    }\r\n}\r\n\r\nConfirm = connect(mapStateToProps, mapDispatchToProps)(Confirm)\r\n\r\nexport default Confirm"]},"metadata":{},"sourceType":"module"}