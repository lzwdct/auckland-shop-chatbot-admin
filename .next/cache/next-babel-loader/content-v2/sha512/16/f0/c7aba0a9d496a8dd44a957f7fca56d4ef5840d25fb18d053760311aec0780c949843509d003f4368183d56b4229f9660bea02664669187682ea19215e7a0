{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\container\\\\menu\\\\menuList.tsx\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { fetchMenus, deleteMenu, confirm } from '../../actions';\nimport AddMenu from './addMenu';\nimport Food from '../../component/Food';\nimport Confirm from '../../constants/Confirm';\n//import TitleMenu from '../top_menu/menus';\n//import Add_Menu from './add_menu';\nconst styles = {\n  wrapper: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  btnLine: {\n    margin: '10px 0px 30px'\n  },\n  btnEdit: {\n    padding: '10px',\n    border: '0',\n    margin: '10px',\n    borderRadius: '4px',\n    color: '#fff',\n    backgroundColor: '#2fb',\n    textDecorationLine: 'none'\n  },\n  btnDelete: {\n    padding: '10px',\n    border: '0',\n    margin: '10px',\n    borderRadius: '4px',\n    color: '#fff',\n    backgroundColor: '#f2b',\n    textDecorationLine: 'none'\n  }\n};\n\nconst MenuList = ({\n  match,\n  menu,\n  fetch_menus,\n  deleteMenu,\n  open\n}) => {\n  const {\n    0: id,\n    1: setID\n  } = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch_menus(match.params.id);\n  }, []);\n\n  const delete_menu = id => {\n    open();\n    setID(id);\n  };\n\n  const renderPosts = () => {\n    return _.map(menu, item => {\n      return __jsx(\"span\", {\n        key: item.idmenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }, __jsx(Food, {\n        onDelete: () => delete_menu(item.idmenu),\n        label: item.menu_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, menu.length > 0 && renderPosts(), __jsx(AddMenu, {\n    shop_id: match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }), __jsx(Confirm, {\n    submit: () => deleteMenu(id, match.params.id),\n    title: \"Are you sure to delete?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  menu: state.menu\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetch_menus: id => {\n      dispatch(fetchMenus(id));\n    },\n    deleteMenu: (menuid, shopid) => {\n      dispatch(deleteMenu(menuid, shopid));\n    },\n    open: () => {\n      dispatch(confirm(true));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuList);\n/** \r\nclass MenuList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tid : 0\r\n\t\t}\r\n\t}\r\n\tUNSAFE_componentWillMount(){\r\n\t\tthis.props.fetch_menus(this.props.match.params.id);\r\n\t}\r\n\tdelete_menu(id){\r\n\t\tthis.props.open();\r\n\t\tthis.setState({\r\n\t\t\tid\r\n\t\t});\r\n\t}\r\n\trenderPosts(){\r\n\t\tconst { menu } = this.props;\r\n\r\n\t\treturn _.map(menu, item => {\r\n\t\t\treturn (\r\n\t\t\t\t<span\r\n\t\t\t\t\tkey={item.idmenu}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Food\r\n\t\t\t\t\t\tonDelete={() => this.delete_menu(item.idmenu)}\r\n\t\t\t\t\t\tlabel={item.menu_name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\tconst { menu } = this.props;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{ menu.length > 0 && this.renderPosts()}\r\n\t\t\t\t<AddMenu shop_id={this.props.match.params.id} />\r\n\t\t\t\t<Confirm\r\n\t\t\t\t\tsubmit={() => this.props.deleteMenu(this.state.id, this.props.match.params.id)}\r\n\t\t\t\t\ttitle=\"Are you sure to delete?\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    menu: state.menu\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetch_menus: (id) => {\r\n            dispatch(fetchMenus(id));\r\n        },\r\n        deleteMenu: (menuid, shopid) => {\r\n            dispatch(deleteMenu(menuid, shopid));\r\n        },\r\n        deleteShop: () => {\r\n            dispatch(deleteShop());\r\n\t\t},\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nMenuList = connect(mapStateToProps, mapDispatchToProps)(MenuList)\r\n\r\nexport default MenuList\r\n*/","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/container/menu/menuList.tsx"],"names":["_","React","useState","useEffect","connect","useDispatch","fetchMenus","deleteMenu","confirm","AddMenu","Food","Confirm","styles","wrapper","display","flexWrap","btnLine","margin","btnEdit","padding","border","borderRadius","color","backgroundColor","textDecorationLine","btnDelete","MenuList","match","menu","fetch_menus","open","id","setID","dispatch","params","delete_menu","renderPosts","map","item","idmenu","menu_name","length","mapStateToProps","state","mapDispatchToProps","menuid","shopid"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport { fetchMenus, deleteMenu, confirm } from '../../actions';\r\n\r\nimport AddMenu from './addMenu';\r\nimport Food from '../../component/Food';\r\nimport Confirm from '../../constants/Confirm';\r\n\r\nimport { Dialog, FlatButton, RaisedButton } from '@material-ui/core';\r\n//import TitleMenu from '../top_menu/menus';\r\n//import Add_Menu from './add_menu';\r\n\r\n\r\nconst styles = {\r\n  wrapper: {\r\n  \tdisplay: 'flex',\r\n  \tflexWrap: 'wrap'\r\n  },\r\n  btnLine: {\r\n  \tmargin: '10px 0px 30px'\r\n  },\r\n  btnEdit: {\r\n  \tpadding: '10px',\r\n    border: '0',\r\n    margin: '10px',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n    backgroundColor: '#2fb',\r\n    textDecorationLine: 'none'\r\n  },\r\n  btnDelete: {\r\n  \tpadding: '10px',\r\n    border: '0',\r\n    margin: '10px',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n    backgroundColor: '#f2b',\r\n    textDecorationLine: 'none'\r\n  }\r\n};\r\n\r\ninterface PropsFromState {\r\n\tmatch: any,\r\n\tmenu: any\r\n}\r\n  \r\ninterface propsFromDispatch {\r\n\tfetch_menus: (id: Number) => void,\r\n\tdeleteMenu: (menuid: Number, shopid: Number) => void,\r\n\topen: () => void\r\n}\r\n\r\ntype AllProps = PropsFromState & propsFromDispatch;\r\n\r\nconst MenuList : React.FunctionComponent<AllProps> = ({ match, menu, fetch_menus, deleteMenu, open }) => {\r\n\tconst [id, setID] = useState(0);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch_menus(match.params.id);\r\n\t},[])\r\n\r\n\tconst delete_menu = (id) => {\r\n\t\topen()\r\n\t\tsetID(id)\r\n\t}\r\n\tconst renderPosts = () => {\r\n\t\treturn _.map(menu, item => {\r\n\t\t\treturn (\r\n\t\t\t\t<span\r\n\t\t\t\t\tkey={item.idmenu}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Food\r\n\t\t\t\t\t\tonDelete={() => delete_menu(item.idmenu)}\r\n\t\t\t\t\t\tlabel={item.menu_name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{ menu.length > 0 && renderPosts()}\r\n\t\t\t<AddMenu shop_id={match.params.id} />\r\n\t\t\t<Confirm\r\n\t\t\t\tsubmit={() => deleteMenu(id, match.params.id)}\r\n\t\t\t\ttitle=\"Are you sure to delete?\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    menu: state.menu\r\n});\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\r\n    return {\r\n        fetch_menus: (id) => {\r\n            dispatch(fetchMenus(id));\r\n        },\r\n        deleteMenu: (menuid, shopid) => {\r\n            dispatch(deleteMenu(menuid, shopid));\r\n        },\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuList)\r\n\r\n/** \r\nclass MenuList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tid : 0\r\n\t\t}\r\n\t}\r\n\tUNSAFE_componentWillMount(){\r\n\t\tthis.props.fetch_menus(this.props.match.params.id);\r\n\t}\r\n\tdelete_menu(id){\r\n\t\tthis.props.open();\r\n\t\tthis.setState({\r\n\t\t\tid\r\n\t\t});\r\n\t}\r\n\trenderPosts(){\r\n\t\tconst { menu } = this.props;\r\n\r\n\t\treturn _.map(menu, item => {\r\n\t\t\treturn (\r\n\t\t\t\t<span\r\n\t\t\t\t\tkey={item.idmenu}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Food\r\n\t\t\t\t\t\tonDelete={() => this.delete_menu(item.idmenu)}\r\n\t\t\t\t\t\tlabel={item.menu_name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\tconst { menu } = this.props;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{ menu.length > 0 && this.renderPosts()}\r\n\t\t\t\t<AddMenu shop_id={this.props.match.params.id} />\r\n\t\t\t\t<Confirm\r\n\t\t\t\t\tsubmit={() => this.props.deleteMenu(this.state.id, this.props.match.params.id)}\r\n\t\t\t\t\ttitle=\"Are you sure to delete?\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    menu: state.menu\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetch_menus: (id) => {\r\n            dispatch(fetchMenus(id));\r\n        },\r\n        deleteMenu: (menuid, shopid) => {\r\n            dispatch(deleteMenu(menuid, shopid));\r\n        },\r\n        deleteShop: () => {\r\n            dispatch(deleteShop());\r\n\t\t},\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nMenuList = connect(mapStateToProps, mapDispatchToProps)(MenuList)\r\n\r\nexport default MenuList\r\n*/"]},"metadata":{},"sourceType":"module"}