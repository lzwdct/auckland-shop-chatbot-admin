{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Program Files (x86)\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\constants\\\\Snack.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { snack } from '../actions';\nimport { Snackbar } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nvar Snack = /*#__PURE__*/function (_Component) {\n  _inherits(Snack, _Component);\n\n  var _super = _createSuper(Snack);\n\n  function Snack() {\n    _classCallCheck(this, Snack);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Snack, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Snackbar, {\n        open: this.props.snack,\n        message: this.props.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Snack;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    snack: state.snack.open,\n    message: state.snack.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    close: function close() {\n      dispatch(snack(false, ''));\n    }\n  };\n};\n\nSnack = connect(mapStateToProps, mapDispatchToProps)(Snack);\nexport default Snack;","map":{"version":3,"sources":["C:/Program Files (x86)/Ampps/www/auckland-shop-chatbot-admin/src/constants/Snack.tsx"],"names":["React","Component","snack","Snackbar","connect","Snack","props","message","mapStateToProps","state","open","mapDispatchToProps","dispatch","close"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,K;;;;;;;;;;;;;6BACM;AACJ,aACI,MAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWJ,KADrB;AAEI,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;;EAReN,S;;AAWpB,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYQ,IADW;AAE9BH,IAAAA,OAAO,EAAEE,KAAK,CAACP,KAAN,CAAYK;AAFS,GAAL;AAAA,CAA7B;;AAKA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,KAAK,EAAE,iBAAM;AACTD,MAAAA,QAAQ,CAACV,KAAK,CAAC,KAAD,EAAQ,EAAR,CAAN,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQAG,KAAK,GAAGD,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,KAA7C,CAAR;AAEA,eAAeA,KAAf","sourcesContent":["import React, { Component, Children } from 'react';\r\nimport { snack } from '../actions';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Snack extends Component{\r\n    render(){\r\n        return(\r\n            <Snackbar\r\n                open={this.props.snack}\r\n                message={this.props.message}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    snack: state.snack.open,\r\n    message: state.snack.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        close: () => {\r\n            dispatch(snack(false, ''));\r\n        }\r\n    }\r\n}\r\n\r\nSnack = connect(mapStateToProps, mapDispatchToProps)(Snack)\r\n\r\nexport default Snack"]},"metadata":{},"sourceType":"module"}