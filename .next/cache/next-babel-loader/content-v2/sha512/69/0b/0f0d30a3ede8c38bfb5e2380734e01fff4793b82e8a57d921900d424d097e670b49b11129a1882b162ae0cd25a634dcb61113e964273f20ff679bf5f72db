{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\container\\\\menu\\\\addMenu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Snack from '../../constants/Snack';\nimport { addNewMenu, snack } from '../../actions';\nconst styles = {\n  wrapper: {\n    height: '30px',\n    margin: '20px 10px',\n    borderRadius: 4,\n    border: '1px solid #ccc'\n  }\n};\n\nconst AddMenu = ({\n  shop_id,\n  add_menu\n}) => {\n  const {\n    0: menu_name,\n    1: setMenu_name\n  } = useState('');\n\n  const add_menus = () => {\n    add_menu(shop_id, menu_name);\n    setMenu_name('');\n  };\n\n  const handleNameChange = event => {\n    setMenu_name(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"add_menu_text\",\n    value: menu_name,\n    onChange: e => handleNameChange(e),\n    onKeyPress: event => {\n      if (event.key === 'Enter') {\n        add_menus();\n      }\n    },\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    id: \"add_menu\",\n    className: \"btn btn-primary\",\n    onClick: () => add_menus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, \"ADD\"), __jsx(Snack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add_menu: (id, name) => {\n      dispatch(addNewMenu(id, name));\n      dispatch(snack(true, '새로운 메뉴가 추가되었습니다.'));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddMenu);\n/**\r\nclass AddMenu extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmenu_name: ''\r\n\t\t};\r\n\t}\r\n\tadd_menus(){\r\n\t\tthis.props.add_menus(this.props.shop_id, this.state.menu_name);\r\n\t\tthis.setState({\r\n\t\t\tmenu_name: '',\r\n\t\t});\r\n\t}\r\n\thandleNameChange(event){\r\n        event.preventDefault();\r\n\t\tthis.setState({ menu_name: event.target.value });\r\n\t};\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tid=\"add_menu_text\" \r\n\t\t\t\t\tvalue={this.state.menu_name} \r\n\t\t\t\t\tonChange={(e) => this.handleNameChange(e)} \r\n\t\t\t\t\tonKeyPress={event => {\r\n\t\t\t\t\t\tif (event.key === 'Enter') {\r\n\t\t\t\t\t\t\tthis.add_menus(event)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={styles.wrapper}\r\n\t\t\t\t/>\r\n\t\t\t\t<button label=\"ADD\" className=\"btn btn-primary\" onClick={(e) => this.add_menus(e)}>\r\n                    ADD\r\n                </button>\r\n                <Snack />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        add_menus: (id, name) => {\r\n            dispatch(addNewMenu(id, name));\r\n            dispatch(snack(true, '새로운 메뉴가 추가되었습니다.'))\r\n        }\r\n    }\r\n}\r\n\r\nAddMenu = connect(null, mapDispatchToProps)(AddMenu)\r\n\r\n\r\nexport default AddMenu\r\n */","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/container/menu/addMenu.tsx"],"names":["React","useState","connect","Snack","addNewMenu","snack","styles","wrapper","height","margin","borderRadius","border","AddMenu","shop_id","add_menu","menu_name","setMenu_name","add_menus","handleNameChange","event","target","value","e","key","mapDispatchToProps","dispatch","id","name"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAkD,aAAlD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAIA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACRC,IAAAA,MAAM,EAAE,MADA;AAEPC,IAAAA,MAAM,EAAE,WAFD;AAGPC,IAAAA,YAAY,EAAC,CAHN;AAIPC,IAAAA,MAAM,EAAE;AAJD;AADI,CAAf;;AAmBA,MAAMC,OAA2C,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAC9E,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMgB,SAAS,GAAG,MAAY;AAC7BH,IAAAA,QAAQ,CAACD,OAAD,EAAUE,SAAV,CAAR;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,GAHD;;AAIA,QAAME,gBAAgB,GAAIC,KAAD,IAAyC;AACjEH,IAAAA,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACA,GAFD;;AAIA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,EAAE,EAAC,eAFJ;AAGC,IAAA,KAAK,EAAEN,SAHR;AAIC,IAAA,QAAQ,EAAGO,CAAD,IAAOJ,gBAAgB,CAACI,CAAD,CAJlC;AAKC,IAAA,UAAU,EAAEH,KAAK,IAAI;AACpB,UAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AAC1BN,QAAAA,SAAS;AACT;AACD,KATF;AAUC,IAAA,KAAK,EAAEX,MAAM,CAACC,OAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAaC;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAE,MAAMU,SAAS,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbD,EAgBC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,CADD;AAoBA,CA/BD;;AAiCA,MAAMO,kBAAkB,GAAIC,QAAD,IAAkD;AACzE,SAAO;AACHX,IAAAA,QAAQ,EAAE,CAACY,EAAD,EAAKC,IAAL,KAAc;AACpBF,MAAAA,QAAQ,CAACrB,UAAU,CAACsB,EAAD,EAAKC,IAAL,CAAX,CAAR;AACAF,MAAAA,QAAQ,CAACpB,KAAK,CAAC,IAAD,EAAO,kBAAP,CAAN,CAAR;AACH;AAJE,GAAP;AAMH,CAPD;;AASA,eAAeH,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCZ,OAAlC,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport _ from 'lodash';\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport Snack from '../../constants/Snack';\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { addNewMenu, snack } from '../../actions';\r\n\r\nconst styles = {\r\n  wrapper: {\r\n  \theight: '30px',\r\n    margin: '20px 10px',\r\n    borderRadius:4,\r\n    border: '1px solid #ccc',\r\n  }\r\n};\r\n\r\ninterface PropsFromState {\r\n\tshop_id: number\r\n  }\r\n  \r\ninterface propsFromDispatch {\r\n\tadd_menu: (shop_id, menu_name) => Function\r\n}\r\n\r\ntype AllProps = PropsFromState & propsFromDispatch;\r\n\r\nconst AddMenu : React.FunctionComponent<AllProps> = ({ shop_id, add_menu }) => {\r\n\tconst [menu_name, setMenu_name] = useState('');\r\n\r\n\tconst add_menus = (): void => {\r\n\t\tadd_menu(shop_id, menu_name);\r\n\t\tsetMenu_name('');\r\n\t}\r\n\tconst handleNameChange = (event: { target: HTMLInputElement }) => {\r\n\t\tsetMenu_name(event.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tid=\"add_menu_text\" \r\n\t\t\t\tvalue={menu_name} \r\n\t\t\t\tonChange={(e) => handleNameChange(e)} \r\n\t\t\t\tonKeyPress={event => {\r\n\t\t\t\t\tif (event.key === 'Enter') {\r\n\t\t\t\t\t\tadd_menus()\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={styles.wrapper}\r\n\t\t\t/>\r\n\t\t\t<button id=\"add_menu\" className=\"btn btn-primary\" onClick={() => add_menus()}>\r\n\t\t\t\tADD\r\n\t\t\t</button>\r\n\t\t\t<Snack />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\r\n    return {\r\n        add_menu: (id, name) => {\r\n            dispatch(addNewMenu(id, name));\r\n            dispatch(snack(true, '새로운 메뉴가 추가되었습니다.'))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddMenu)\r\n\r\n/**\r\nclass AddMenu extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmenu_name: ''\r\n\t\t};\r\n\t}\r\n\tadd_menus(){\r\n\t\tthis.props.add_menus(this.props.shop_id, this.state.menu_name);\r\n\t\tthis.setState({\r\n\t\t\tmenu_name: '',\r\n\t\t});\r\n\t}\r\n\thandleNameChange(event){\r\n        event.preventDefault();\r\n\t\tthis.setState({ menu_name: event.target.value });\r\n\t};\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tid=\"add_menu_text\" \r\n\t\t\t\t\tvalue={this.state.menu_name} \r\n\t\t\t\t\tonChange={(e) => this.handleNameChange(e)} \r\n\t\t\t\t\tonKeyPress={event => {\r\n\t\t\t\t\t\tif (event.key === 'Enter') {\r\n\t\t\t\t\t\t\tthis.add_menus(event)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={styles.wrapper}\r\n\t\t\t\t/>\r\n\t\t\t\t<button label=\"ADD\" className=\"btn btn-primary\" onClick={(e) => this.add_menus(e)}>\r\n                    ADD\r\n                </button>\r\n                <Snack />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        add_menus: (id, name) => {\r\n            dispatch(addNewMenu(id, name));\r\n            dispatch(snack(true, '새로운 메뉴가 추가되었습니다.'))\r\n        }\r\n    }\r\n}\r\n\r\nAddMenu = connect(null, mapDispatchToProps)(AddMenu)\r\n\r\n\r\nexport default AddMenu\r\n */"]},"metadata":{},"sourceType":"module"}