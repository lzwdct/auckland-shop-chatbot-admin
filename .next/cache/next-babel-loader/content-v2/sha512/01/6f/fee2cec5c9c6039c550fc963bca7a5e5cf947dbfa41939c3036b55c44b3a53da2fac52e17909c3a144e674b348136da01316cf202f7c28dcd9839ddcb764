{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\container\\\\shop\\\\ShopList.tsx\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchShops, deleteShop, confirm } from '../../actions';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport AddShop from './addShop';\nimport Confirm from '../../constants/Confirm';\nimport { useHistory } from 'react-router-dom';\n\nconst ShopList = props => {\n  const {\n    0: id,\n    1: setID\n  } = useState(0);\n  const shopList = useSelector(state => state.shopList);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (shopList.length === 0) dispatch(fetchShops());\n  }, []);\n\n  const delete_shop = id => {\n    dispatch(confirm(true));\n    setID(id);\n  };\n\n  const renderShop = shopList => {\n    if (!shopList.length) return null;\n    return _.map(shopList, shop => {\n      return __jsx(ListItem, {\n        button: true,\n        key: shop.idshop,\n        component: \"a\",\n        onClick: () => history.push('/menu/' + shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, __jsx(ListItemText, {\n        primary: shop.shop_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }), __jsx(ListItemSecondaryAction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => history.push('/edit/' + shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, \"Edit\"), __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => delete_shop(shop.idshop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, \"Delete\")));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, shopList.length === 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 42\n    }\n  }, \"Loading...\"), shopList.length > 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, renderShop(shopList)), __jsx(AddShop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), __jsx(Confirm, {\n    submit: () => dispatch(deleteShop(id)),\n    title: \"Are you sure to delete?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })));\n};\n/** \r\nclass ShopList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\t\t\tid : 0\r\n\t\t}\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.shopList.length === 0)\r\n            this.props.getShopList();\r\n    }\r\n    delete_shop(id){\r\n\t\tthis.props.open();\r\n\t\tthis.setState({\r\n\t\t\tid\r\n\t\t});\r\n\t}\r\n    renderShop(shopList){\r\n\r\n        if(!shopList.length) return null;\r\n\t\treturn _.map(shopList, shop => {\r\n\t\t\treturn (\r\n                <ListItem button key={shop.idshop} component=\"a\" onClick={() => this.props.history.push('/menu/' + shop.idshop) } >\r\n                    <ListItemText primary={shop.shop_name} />\r\n                    <ListItemSecondaryAction>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.props.history.push('/edit/'+shop.idshop) }\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button \r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => this.delete_shop(shop.idshop)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n    render() {\r\n        const { shopList } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    shopList.length === 0 && <div>Loading...</div>\r\n                }\r\n                {\r\n                    shopList.length > 0 &&\r\n                    <div>\r\n                        <List>\r\n                            {this.renderShop(shopList)}\r\n                        </List>\r\n                        <AddShop/>\r\n                        <Confirm\r\n                            submit={() => this.props.deleteShop(this.state.id)}\r\n                            title=\"Are you sure to delete?\"\r\n                        />\r\n                    </div>\r\n                    \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    shopList: state.shopList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getShopList: () => {\r\n            dispatch(fetchShops());\r\n        },\r\n        deleteShop: (id) => {\r\n            dispatch(deleteShop(id))\r\n        },\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nShopList = withRouter(connect(mapStateToProps, mapDispatchToProps)(ShopList))\r\n*/\n\n\nexport default ShopList;","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/container/shop/ShopList.tsx"],"names":["_","React","useState","useEffect","useSelector","useDispatch","fetchShops","deleteShop","confirm","List","ListItem","ListItemText","ListItemSecondaryAction","AddShop","Confirm","useHistory","ShopList","props","id","setID","shopList","state","dispatch","history","length","delete_shop","renderShop","map","shop","idshop","push","shop_name"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { fetchShops, deleteShop, confirm } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\r\nimport AddShop from './addShop';\r\nimport Confirm from '../../constants/Confirm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ShopList = (props) => {\r\n    const [id, setID] = useState(0);\r\n\tconst shopList = useSelector(state => state.shopList);\r\n\tconst dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif(shopList.length === 0)\r\n        dispatch(fetchShops());\r\n    },[])\r\n    \r\n    const delete_shop = (id) => {\r\n\t\tdispatch(confirm(true));\r\n\t\tsetID(id)\r\n\t}\r\n    const renderShop = (shopList) => {\r\n        if(!shopList.length) return null;\r\n\t\treturn _.map(shopList, shop => {\r\n\t\t\treturn (\r\n                <ListItem button key={shop.idshop} component=\"a\" onClick={() => history.push('/menu/' + shop.idshop) } >\r\n                    <ListItemText primary={shop.shop_name} />\r\n                    <ListItemSecondaryAction>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => history.push('/edit/'+shop.idshop) }\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button \r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => delete_shop(shop.idshop)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n\t\t\t);\r\n\t\t});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                shopList.length === 0 && <div>Loading...</div>\r\n            }\r\n            {\r\n                shopList.length > 0 &&\r\n                <div>\r\n                    <List>\r\n                        {renderShop(shopList)}\r\n                    </List>\r\n                    <AddShop/>\r\n                    <Confirm\r\n                        submit={() => dispatch(deleteShop(id))}\r\n                        title=\"Are you sure to delete?\"\r\n                    />\r\n                </div>\r\n                \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n/** \r\nclass ShopList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\t\t\tid : 0\r\n\t\t}\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.shopList.length === 0)\r\n            this.props.getShopList();\r\n    }\r\n    delete_shop(id){\r\n\t\tthis.props.open();\r\n\t\tthis.setState({\r\n\t\t\tid\r\n\t\t});\r\n\t}\r\n    renderShop(shopList){\r\n\r\n        if(!shopList.length) return null;\r\n\t\treturn _.map(shopList, shop => {\r\n\t\t\treturn (\r\n                <ListItem button key={shop.idshop} component=\"a\" onClick={() => this.props.history.push('/menu/' + shop.idshop) } >\r\n                    <ListItemText primary={shop.shop_name} />\r\n                    <ListItemSecondaryAction>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.props.history.push('/edit/'+shop.idshop) }\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button \r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => this.delete_shop(shop.idshop)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n    render() {\r\n        const { shopList } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    shopList.length === 0 && <div>Loading...</div>\r\n                }\r\n                {\r\n                    shopList.length > 0 &&\r\n                    <div>\r\n                        <List>\r\n                            {this.renderShop(shopList)}\r\n                        </List>\r\n                        <AddShop/>\r\n                        <Confirm\r\n                            submit={() => this.props.deleteShop(this.state.id)}\r\n                            title=\"Are you sure to delete?\"\r\n                        />\r\n                    </div>\r\n                    \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    shopList: state.shopList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getShopList: () => {\r\n            dispatch(fetchShops());\r\n        },\r\n        deleteShop: (id) => {\r\n            dispatch(deleteShop(id))\r\n        },\r\n\t\topen: () => {\r\n\t\t\tdispatch(confirm(true));\r\n\t\t}\r\n    }\r\n}\r\n\r\nShopList = withRouter(connect(mapStateToProps, mapDispatchToProps)(ShopList))\r\n*/\r\nexport default ShopList"]},"metadata":{},"sourceType":"module"}