{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Ampps\\\\www\\\\auckland-shop-chatbot-admin\\\\src\\\\container\\\\login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport { userLogin } from '../actions';\nvar style = {\n  paper: {\n    padding: 20\n  }\n};\n\nvar Login = function Login(props) {\n  _s();\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var login = useSelector(function (state) {\n    return state.login;\n  });\n  var error = useSelector(function (state) {\n    return state.error;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var success = login.success;\n    var history = props.history;\n    if (success) history.push('/');\n  });\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    dispatch(userLogin(username, password));\n  };\n\n  var setValue = function setValue(type, newValue) {\n    if (type === 'username') {\n      setUsername(newValue);\n    } else {\n      setPassword(newValue);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    style: style.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"username\",\n    placeholder: \"Username\",\n    onChange: function onChange(event) {\n      return setValue('username', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    placeholder: \"password\",\n    onChange: function onChange(event) {\n      return setValue('password', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })), login.error === 1 && __jsx(\"div\", {\n    className: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 46\n    }\n  }, \"Invalid login detail\"), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    onClick: function onClick(e) {\n      return handleClick(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n/**\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            login: 0,\r\n            error: 0\r\n        }\r\n\r\n        this.setValue = this.setValue.bind(this);\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n        const { success } = nextProps.login;\r\n        const { history } = this.props;\r\n        if( success )\r\n            history.push('/');\r\n    }\r\n    handleClick(e){\r\n        e.preventDefault();\r\n        const { userLogin } = this.props; \r\n        const { username, password } = this.state;\r\n\r\n        userLogin(username, password);\r\n    }\r\n    setValue(type, newValue){\r\n        if(type === 'username'){\r\n            this.setState({ username: newValue });\r\n        }else{\r\n            this.setState({ password: newValue });\r\n        }\r\n    }\r\n    render() {\r\n        const { error } = this.props.login;\r\n        return (\r\n            <div>\r\n                <Paper style={style.paper}>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"username\"\r\n                                placeholder=\"Username\"\r\n                                onChange={(event) => this.setValue('username', event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"password\"\r\n                                placeholder=\"password\"\r\n                                onChange={(event) => this.setValue('password', event.target.value)}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            error === 1 && <div className=\"error\">Invalid login detail</div> \r\n                        }\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-default\"\r\n                            onClick={(e) => this.handleClick(e)}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.login,\r\n    error: state.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        userLogin: (username, password) => {\r\n            dispatch(userLogin(username, password));\r\n        }\r\n    }\r\n}\r\n\r\nLogin = connect(mapStateToProps, mapDispatchToProps)(Login)\r\n**/\n\n\n_s(Login, \"POfHcqn5FTrHm0kLTydCIkNayOQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Program Files/Ampps/www/auckland-shop-chatbot-admin/src/container/login.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Paper","userLogin","style","paper","padding","Login","props","username","setUsername","password","setPassword","login","state","error","dispatch","success","history","push","handleClick","e","preventDefault","setValue","type","newValue","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { userLogin } from '../actions';\r\nconst style = {\r\n    paper: {\r\n        padding: 20\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const login = useSelector(state => state.login);\r\n    const error = useSelector(state => state.error);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { success } = login;\r\n        const { history } = props;\r\n        if( success )\r\n            history.push('/');\r\n    })\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(userLogin(username, password));\r\n    }\r\n    const setValue = (type, newValue) => {\r\n        if(type === 'username'){\r\n            setUsername(newValue)\r\n        }else{\r\n            setPassword(newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper style={style.paper}>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={(event) => setValue('username', event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            placeholder=\"password\"\r\n                            onChange={(event) => setValue('password', event.target.value)}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        login.error === 1 && <div className=\"error\">Invalid login detail</div> \r\n                    }\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-default\"\r\n                        onClick={(e) => handleClick(e)}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            login: 0,\r\n            error: 0\r\n        }\r\n\r\n        this.setValue = this.setValue.bind(this);\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n        const { success } = nextProps.login;\r\n        const { history } = this.props;\r\n        if( success )\r\n            history.push('/');\r\n    }\r\n    handleClick(e){\r\n        e.preventDefault();\r\n        const { userLogin } = this.props; \r\n        const { username, password } = this.state;\r\n\r\n        userLogin(username, password);\r\n    }\r\n    setValue(type, newValue){\r\n        if(type === 'username'){\r\n            this.setState({ username: newValue });\r\n        }else{\r\n            this.setState({ password: newValue });\r\n        }\r\n    }\r\n    render() {\r\n        const { error } = this.props.login;\r\n        return (\r\n            <div>\r\n                <Paper style={style.paper}>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"username\"\r\n                                placeholder=\"Username\"\r\n                                onChange={(event) => this.setValue('username', event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"password\"\r\n                                placeholder=\"password\"\r\n                                onChange={(event) => this.setValue('password', event.target.value)}\r\n                            />\r\n                        </div>\r\n                        {\r\n                            error === 1 && <div className=\"error\">Invalid login detail</div> \r\n                        }\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-default\"\r\n                            onClick={(e) => this.handleClick(e)}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.login,\r\n    error: state.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        userLogin: (username, password) => {\r\n            dispatch(userLogin(username, password));\r\n        }\r\n    }\r\n}\r\n\r\nLogin = connect(mapStateToProps, mapDispatchToProps)(Login)\r\n**/\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}